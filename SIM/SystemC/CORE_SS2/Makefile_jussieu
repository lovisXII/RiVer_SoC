CC=g++
RISC=../binaire_jussieu_scientific_linux/riscv32-unknown-elf-gcc 
LD=../binaire_jussieu_scientific_linux/riscv32-unknown-elf-ld
SYSTEMC_DIR=../systemc-2.3.3
INCLUDE_PATH=-I$(SYSTEMC_DIR)/include -I../ELFIO
SYSC_PATH=$(SYSTEMC_DIR)/lib-linux64
LINKER_ARGS=-rpath=$(SYSTEMC_DIR)/lib-linux64 
LIBS=-lsystemc -lm
C_ARGS=$(INCLUDE_PATH) $(LINK_PATH) -Wl,$(LINKER_ARGS) $(LIBS) -g
OBJECTS=core.o core_tb.o IFETCH/ifetch.o DEC/dec.o EXE/alu.o EXE/shifter.o EXE/exec.o MEM/mem.o REG/reg.o WBK/wbk.o CSR/csr.o
LD_SCRIPT= -T seg_fac.ld
RISC_FLAGS= -nostdlib $(LD_SCRIPT)

all: core_tb

core_tb: $(OBJECTS) exception
	$(CC) $(OBJECTS) -o $@ $(C_ARGS) 

exception: tests/exception.s
	$(RISC) $(RISC_FLAGS) $^ -o tests/$@

%.o: %.cpp  %.h
	$(CC) -c $< $(C_ARGS) -o $@

%.o: %.cpp 
	$(CC) -c $< $(C_ARGS) -o $@

clean: 
	rm -f *.o main alu_tb shifter_tb exec_tb *.vcd $(OBJECTS) core_tb a.out
	rm tests/exception
